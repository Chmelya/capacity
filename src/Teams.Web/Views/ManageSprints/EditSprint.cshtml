@model Teams.Web.ViewModels.Sprint.EditSprintViewModel
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@{
    ViewData["Title"] = @Localizer["EditSprint"];
}
<script src="https://kit.fontawesome.com/8519ed4a13.js" crossorigin="anonymous"></script>

<div align="center">
    @if (Model.Status == PossibleStatuses.CreatedStatus)
    {
        <h1 size="4" class="text-primary" align="left">@Model.TeamName | @Localizer["EditSprint"]</h1>
    }
    else if (Model.Status == PossibleStatuses.ActiveStatus)
    {
        <h1 size="4" class="text-success" align="left">@Model.TeamName | @Localizer["EditSprint"]</h1>
    }
    else if (Model.Status == PossibleStatuses.CompletedStatus)
    {
        <h1 size="4" class="text-warning" align="left">@Model.TeamName | @Localizer["EditSprint"]</h1>
    }
</div>

<div>
    @using (Html.BeginForm("EditSprint", "ManageSprints", FormMethod.Post))
    {
        <div><p align="center" style="color:red">@Model.ErrorMessage</p></div>
        @Html.Hidden("TeamId", @Model.TeamId)
        @Html.Hidden("SprintId", @Model.SprintId)
        @Html.Hidden("TeamName", @Model.TeamName)
        <div>
            <label for="name">@Localizer["Name"] :</label>
            <input id="name" name="SprintName" class="form-control" value="@Model.SprintName" />
            <span asp-validation-for="SprintName"></span>
        </div>

        <div>
            <label for="days">@Localizer["DaysInSprint"] :</label>
            <input id="days" name="SprintDaysInSprint" class="form-control" value="@Model.SprintDaysInSprint" />
            <span asp-validation-for="SprintDaysInSprint"></span>
        </div>

        <div>
            <label for="points">@Localizer["StoryPointInHours"]</label>
            <input id="points" name="SprintStorePointInHours" class="form-control" value="@Model.SprintStorePointInHours" />
            <span asp-validation-for="SprintStorePointInHours"></span>
        </div>

        <div>
            <div class="btn-group btn-group-toggle">
                @if (Model.Status == PossibleStatuses.CreatedStatus)
                {
                    <label id="statusLabel" class="btn btn-outline-success ">
                        <input type="radio" name="status" id="option1" autocomplete="off" onclick="ActiveStatusButton(event)" value=@Model.Status>
                        @Localizer["Active"]
                    </label>
                }
                else if (Model.Status == PossibleStatuses.ActiveStatus)
                {
                    <label id="statusLabel" class="btn btn-outline-warning " >
                        <input type="radio" class="btn btn-outline-warning " name="status" id="option1" onclick="ActiveStatusButton(event)" value=@Model.Status>
                        @Localizer["Сompleted"]
                    </label>
                }
            </div>
        </div>
        <div style="display: table">
            <input id="sub" type="submit" class="btn btn-success" value="@Localizer["EditSprint"]" />
            <button style="margin-left:7px" type='button' class="btn btn-danger" onclick="location.href = '@Url.Action("AllSprints", "ManageSprints", new { teamId = Model.TeamId })'">@Localizer["Close"]</button>
        </div>
     }
</div>

<script>
    var oldStatusValue;
    function ActiveStatusButton(event) {
        let statusLabel = document.querySelector('#statusLabel');
        let statusLabelClassName = statusLabel.className;
        if (statusLabelClassName.indexOf('active focus') == -1) {
            oldStatusValue = event.currentTarget.value;
            statusLabelClassName += "active focus";
            if (event.currentTarget.value == '0') {
                event.currentTarget.setAttribute("value", '1');
            }
            else if (event.currentTarget.value == '1') {
                event.currentTarget.setAttribute("value", '2');
            }
        }
        else
        {
            statusLabelClassName = statusLabelClassName.replace("active focus", "");
            event.currentTarget.setAttribute("value", oldStatusValue);
        }
        console.log(statusLabelClassName);
        statusLabel.setAttribute('class', statusLabelClassName);
    }
</script>